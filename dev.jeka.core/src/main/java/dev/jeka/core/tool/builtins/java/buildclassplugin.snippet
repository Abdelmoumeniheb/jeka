import dev.jeka.core.api.java.JkJavaVersion;
import dev.jeka.core.api.project.JkJavaProject;
import dev.jeka.core.api.system.JkLocator;
import dev.jeka.core.tool.JkClass;
import dev.jeka.core.tool.JkPlugin;
import dev.jeka.core.tool.builtins.java.JkPluginJava;

class Build extends JkClass {

    final JkPluginJava javaPlugin = getPlugin(JkPluginJava.class);

    @Override
    protected void setup() {
        JkJavaProject javaProject = javaPlugin.getProject();
        javaProject.simpleFacade()
            .setJvmTargetVersion(JkJavaVersion.V8)
            .setCompileDependencies(deps -> deps
                .andFiles(JkLocator.getJekaJarPath())
            );
        JkPlugin.setJekaPluginCompatibilityRange(javaProject.getConstruction().getManifest(),
                "${jekaVersion}",
                "https://raw.githubusercontent.com/your_org/your_repo/master/breaking_versions.txt");

        // This section is necessary to publish on a public repository
        javaProject.getPublication()
                .getMaven()
                    .setModuleId("your.org:plugin-name")
                    .setVersion("0.0.1-SNAPSHOT")
                    .getPomMetadata()
                        .addApache2License()
                        .getProjectInfo()
                            .setName("Jeka plugin for ....")
                            .setDescription("A Jeka plugin for ...")
                            .setUrl("https://github.com/your_org/your_repo")
                        .__
                        .getScm()
                            .setUrl("https://github.com/your_org/your_repo");
    }

    public void cleanPack() {
        clean(); javaPlugin.pack();
    }

}