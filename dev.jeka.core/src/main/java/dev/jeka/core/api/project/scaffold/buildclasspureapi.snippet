package dev.jeka.core.api.project.snippet;

import dev.jeka.core.api.project.JkIdeSupport;
import dev.jeka.core.api.project.JkIdeSupportSupplier;
import dev.jeka.core.api.project.JkProject;
import dev.jeka.core.tool.JkDoc;
import dev.jeka.core.tool.KBean;

class Build extends KBean implements JkIdeSupportSupplier {

    private final JkProject project = JkProject.of();

    @JkDoc("Clean output directory then compile, test and create jar")
    public void cleanPack() {
        project.clean().pack();
    }

    @JkDoc("Display project info on console")
    public void info() {
        System.out.println(project.getInfo());
    }

    @JkDoc("Display dependency tree on console")
    public void depTree() {
        project.displayDependencyTree();
    }

    @Override
    public JkIdeSupport getJavaIdeSupport() {
        return project.getJavaIdeSupport();
    }

    @Override
    protected init() {
        project.flatFacade()
                .addCompileDeps(
                        "com.google.guava:guava:32.1.3-jre",
                        "org.slf4j:slf4j-simple:2.0.9"
                )
                .addCompileOnlyDeps(
                        "org.projectlombok:lombok:1.18.30"
                )
                .addTestDeps(
                        "org.junit.jupiter:junit-jupiter:5.10.1"
                )

                // Only necessary if your project is published in a binary repository.
                .setPublishedModuleId("your.org:project-name")
                .setPublishedVersion("0.0.1-SNAPSHOT");
    }

}
