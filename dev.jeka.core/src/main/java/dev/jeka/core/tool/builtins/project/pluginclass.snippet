package your.basepackage;

import dev.jeka.core.tool.JkClass;
import dev.jeka.core.tool.JkDoc;
import dev.jeka.core.tool.JkPlugin;

@JkDoc("Explain here what your plugin is doing.\n" +
    "No need to list methods or options here has you are supposed to annotate them directly.")
public class JkPluginXxxxxxx extends JkPlugin {

    @JkDoc("All public fields will be exposed as plugin option. Rewrite this comment to document it.")
    public String yourParam = "aDefaultValue;

    protected JkPluginXxxxxxx(JkClass jkClass) {
        super(jkClass);
    }

    // This method will be called before JkClass#setup
    @Override
    protected void beforeSetup() throws Exception {
    }


    // This method will be called after JkClass#setup
    @Override
    protected void afterSetup() throws Exception {
    }

    @JkDoc("All public no-args methods returning void will be exposed as plugin method. \n"
      + "Rewrite this comment to document it.")
    public void yourMethod() {
    }

}
